
"use strict";

var GameServerSim = GameServerSim || {};

GameServerSim.WIN_CHANCE = 80; // percentage
GameServerSim.JACKPOT_WIN_CHANCE = 60; // percentage


// GameServerSim.WIN_CHANCE = 80; // percentage
// GameServerSim.JACKPOT_WIN_CHANCE = 60; // percentage

/***********************************************************************************/
// 						       Base Data Structure - Scenario Section
/***********************************************************************************/

GameServerSim.Scenario = {};
GameServerSim.Scenario.Cost = 0;
GameServerSim.Scenario.Win = 0;

GameServerSim.Scenario.NumbersSelected  = []; // Total 10 numbers should be selected by the player.
GameServerSim.Scenario.NumbersReturned  = []; // Total 20 numbers will be generated by the system return to the player.
GameServerSim.Scenario.NumbersWithStars = []; // Subsets of NumbersReturned.


/***********************************************************************************/
// 						       Private Methods
/***********************************************************************************/

GameServerSim._Reset =function() {
    GameServerSim.Scenario = {};
    GameServerSim.Scenario.Cost = 0;
    GameServerSim.Scenario.Win = 0;

    GameServerSim.Scenario.NumbersSelected  = []; // Total 10 numbers should be selected by the player.
    GameServerSim.Scenario.NumbersReturned  = []; // Total 20 numbers will be generated by the system return to the player.
    GameServerSim.Scenario.NumbersWithStar  = []; // Subsets of NumbersReturned.
}






/***********************************************************************************/
// 						       Public Methods
/***********************************************************************************/


// TODO: Generate Game Scenario
GameServerSim.GenerateGameScenario = function(wagerAmount, numbersSelected) {
    GameServerSim._Reset();
    GameServerSim.Scenario.Cost = GameServerSim._ValidateCost(wagerAmount);

    // Win Decision
    if (xqu.utils.RandomNum(0, 100) < GameServerSim.WIN_CHANCE) {
        GameServerSim._GenerateWin(numbersSelected);
    } else {
        // Lose Scenario
        GameServerSim._GenerateLose(numbersSelected);
    }

    // Return the Whole Data package(Game Scenario) to client
    xqu.log("********************************************GameServerSim.GenerateGameScenario: Finished Generating,  Scenario is below : ");
    xqu.log(GameServerSim.Scenario);
    return GameServerSim.Scenario;
}



/******************************************
/   How to lose:
/       1. Match N(1 <= N <= 4) numbers
******************************************/
GameServerSim._GenerateLose = function(numbersSeleted) {

    // (1/2)Generate Match Numbers( between 1 and 4).


    // (2/2)Generate Stars (between 1 and 4)

}


// TODO: Return Win Game Scenario
GameServerSim._GenerateWin = function(numbersSeleted) {

}


/***********************************************************************************/
// 						       Helper Functions
/***********************************************************************************/

// TODO: Return the amount of cost
GameServerSim._ValidateCost = function(cost) {

    xqu.assert(false, "GameServerSim._ValidateCost: not a valid cost({0})".format(cost));
    return cost;
}


GameServerSim._ValidateNumberSelected = function(nums) {
    var ary = new Array(81).join(0).fill('');

    xqu.assert(nums.length != 10, 'GameServerSim._ValidateNumberSelected: selected numbers amount is not 10, nums selected are {0}'.format(nums));

    // TODO:
    return cost;
}

